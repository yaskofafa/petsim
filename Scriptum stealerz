--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.8) ~  Much Love, Ferib 

]]--

do
	local v0 = string.char;
	local v1 = string.byte;
	local v2 = string.sub;
	local v3 = bit32 or bit;
	local v4 = v3.bxor;
	local v5 = table.concat;
	local v6 = table.insert;
	local function v7(v24, v25)
		local v26 = 0;
		local v27;
		while true do
			if (v26 == 1) then
				return v5(v27);
			end
			if (v26 == 0) then
				v27 = {};
				for v44 = 1, #v24 do
					v6(v27, v0(v4(v1(v2(v24, v44, v44 + 1)), v1(v2(v25, 1 + (v44 % #v25), 1 + (v44 % #v25) + 1))) % 256));
				end
				v26 = 1;
			end
		end
	end
	local v8 = tonumber;
	local v9 = string.byte;
	local v10 = string.char;
	local v11 = string.sub;
	local v12 = string.gsub;
	local v13 = string.rep;
	local v14 = table.concat;
	local v15 = table.insert;
	local v16 = math.ldexp;
	local v17 = getfenv or function()
		return _ENV;
	end;
	local v18 = setmetatable;
	local v19 = pcall;
	local v20 = select;
	local v21 = unpack or table.unpack;
	local v22 = tonumber;
	local function v23(v28, v29, ...)
		local v30 = 0;
		local v31;
		local v32;
		local v33;
		local v34;
		local v35;
		local v36;
		local v37;
		local v38;
		local v39;
		local v40;
		local v41;
		local v42;
		local v43;
		while true do
			if (v30 == 1) then
				v35 = nil;
				v36 = nil;
				v37 = nil;
				v38 = nil;
				v30 = 2;
			end
			if (2 == v30) then
				v39 = nil;
				v40 = nil;
				v41 = nil;
				v42 = nil;
				v30 = 3;
			end
			if (v30 == 0) then
				v31 = 0;
				v32 = nil;
				v33 = nil;
				v34 = nil;
				v30 = 1;
			end
			if (v30 == 3) then
				v43 = nil;
				while true do
					local v45 = 0;
					while true do
						if (v45 == 1) then
							if (v31 == 3) then
								local v46 = 0;
								while true do
									if (v46 == 2) then
										v31 = 4;
										break;
									end
									if (v46 == 0) then
										function v38()
											local v52 = 0;
											local v53;
											local v54;
											local v55;
											local v56;
											local v57;
											local v58;
											local v59;
											while true do
												if (v52 == 2) then
													v57 = nil;
													v58 = nil;
													v52 = 3;
												end
												if (v52 == 0) then
													v53 = 0;
													v54 = nil;
													v52 = 1;
												end
												if (v52 == 1) then
													v55 = nil;
													v56 = nil;
													v52 = 2;
												end
												if (3 == v52) then
													v59 = nil;
													while true do
														local v109 = 0;
														while true do
															if (v109 == 0) then
																if (v53 == 3) then
																	local v119 = 0;
																	while true do
																		if (v119 == 0) then
																			if (v58 == (0 - 0)) then
																				if (v57 == 0) then
																					return v59 * 0;
																				else
																					local v169 = 0;
																					local v170;
																					while true do
																						if (v169 == 0) then
																							v170 = 0;
																							while true do
																								if (v170 == 0) then
																									v58 = 1;
																									v56 = 0;
																									break;
																								end
																							end
																							break;
																						end
																					end
																				end
																			elseif (v58 == 2047) then
																				return ((v57 == 0) and (v59 * (1 / (619 - (555 + 64))))) or (v59 * NaN);
																			end
																			return v16(v59, v58 - 1023) * (v56 + (v57 / (2 ^ 52)));
																		end
																	end
																end
																if (2 == v53) then
																	local v120 = 0;
																	while true do
																		if (v120 == 1) then
																			v53 = 3;
																			break;
																		end
																		if (v120 == 0) then
																			v58 = v34(v55, 21, 31);
																			v59 = ((v34(v55, 32) == 1) and -1) or 1;
																			v120 = 1;
																		end
																	end
																end
																v109 = 1;
															end
															if (v109 == 1) then
																if (v53 == 1) then
																	local v121 = 0;
																	while true do
																		if (v121 == 0) then
																			v56 = 1;
																			v57 = (v34(v55, 1, 20) * (2 ^ 32)) + v54;
																			v121 = 1;
																		end
																		if (v121 == 1) then
																			v53 = 2;
																			break;
																		end
																	end
																end
																if (v53 == 0) then
																	local v122 = 0;
																	while true do
																		if (v122 == 0) then
																			v54 = v37();
																			v55 = v37();
																			v122 = 1;
																		end
																		if (1 == v122) then
																			v53 = 1;
																			break;
																		end
																	end
																end
																break;
															end
														end
													end
													break;
												end
											end
										end
										v39 = nil;
										v46 = 1;
									end
									if (v46 == 1) then
										function v39(v60)
											local v61 = 0;
											local v62;
											local v63;
											local v64;
											while true do
												if (0 == v61) then
													v62 = 0;
													v63 = nil;
													v61 = 1;
												end
												if (v61 == 1) then
													v64 = nil;
													while true do
														local v110 = 0;
														while true do
															if (v110 == 0) then
																if (v62 == 2) then
																	local v123 = 0;
																	while true do
																		if (v123 == 0) then
																			v64 = {};
																			for v141 = 1, #v63 do
																				v64[v141] = v10(v9(v11(v63, v141, v141)));
																			end
																			v123 = 1;
																		end
																		if (1 == v123) then
																			v62 = 3;
																			break;
																		end
																	end
																end
																if (v62 == 0) then
																	local v124 = 0;
																	while true do
																		if (v124 == 1) then
																			v62 = 1;
																			break;
																		end
																		if (v124 == 0) then
																			v63 = nil;
																			if not v60 then
																				local v167 = 0;
																				while true do
																					if (0 == v167) then
																						v60 = v37();
																						if (v60 == 0) then
																							return "";
																						end
																						break;
																					end
																				end
																			end
																			v124 = 1;
																		end
																	end
																end
																v110 = 1;
															end
															if (v110 == 1) then
																if (v62 == 3) then
																	return v14(v64);
																end
																if (v62 == 1) then
																	local v125 = 0;
																	while true do
																		if (v125 == 1) then
																			v62 = 2;
																			break;
																		end
																		if (v125 == 0) then
																			v63 = v11(v28, v32, (v32 + v60) - 1);
																			v32 = v32 + v60;
																			v125 = 1;
																		end
																	end
																end
																break;
															end
														end
													end
													break;
												end
											end
										end
										v40 = v37;
										v46 = 2;
									end
								end
							end
							if (v31 == 0) then
								local v47 = 0;
								while true do
									if (1 == v47) then
										v28 = v12(v11(v28, 5), v7("\181\224", "\72\155\206\210"), function(v65)
											if (v9(v65, 2) == 79) then
												local v98 = 0;
												local v99;
												while true do
													if (v98 == 0) then
														v99 = 0;
														while true do
															if (v99 == 0) then
																local v116 = 0;
																while true do
																	if (v116 == 0) then
																		v33 = v8(v11(v65, 1, 1));
																		return "";
																	end
																end
															end
														end
														break;
													end
												end
											else
												local v100 = 0;
												local v101;
												local v102;
												while true do
													if (v100 == 1) then
														while true do
															if (v101 == 0) then
																v102 = v10(v8(v65, 16));
																if v33 then
																	local v134 = 0;
																	local v135;
																	local v136;
																	while true do
																		if (v134 == 1) then
																			while true do
																				local v168 = 0;
																				while true do
																					if (v168 == 0) then
																						if (0 == v135) then
																							local v179 = 0;
																							while true do
																								if (v179 == 0) then
																									v136 = v13(v102, v33);
																									v33 = nil;
																									v179 = 1;
																								end
																								if (v179 == 1) then
																									v135 = 1;
																									break;
																								end
																							end
																						end
																						if (v135 == 1) then
																							return v136;
																						end
																						break;
																					end
																				end
																			end
																			break;
																		end
																		if (0 == v134) then
																			v135 = 0;
																			v136 = nil;
																			v134 = 1;
																		end
																	end
																else
																	return v102;
																end
																break;
															end
														end
														break;
													end
													if (v100 == 0) then
														v101 = 0;
														v102 = nil;
														v100 = 1;
													end
												end
											end
										end);
										v34 = nil;
										v47 = 2;
									end
									if (v47 == 0) then
										v32 = 1;
										v33 = nil;
										v47 = 1;
									end
									if (2 == v47) then
										v31 = 1;
										break;
									end
								end
							end
							v45 = 2;
						end
						if (2 == v45) then
							if (v31 == 5) then
								local v48 = 0;
								while true do
									if (v48 == 0) then
										v43 = nil;
										function v43(v66, v67, v68)
											local v69 = 0;
											local v70;
											local v71;
											local v72;
											local v73;
											while true do
												if (v69 == 0) then
													v70 = 0;
													v71 = nil;
													v69 = 1;
												end
												if (v69 == 1) then
													v72 = nil;
													v73 = nil;
													v69 = 2;
												end
												if (2 == v69) then
													while true do
														local v111 = 0;
														while true do
															if (v111 == 0) then
																if (1 == v70) then
																	local v126 = 0;
																	while true do
																		if (v126 == 0) then
																			v73 = v66[3];
																			return function(...)
																				local v143 = 0;
																				local v144;
																				local v145;
																				local v146;
																				local v147;
																				local v148;
																				local v149;
																				local v150;
																				local v151;
																				local v152;
																				local v153;
																				local v154;
																				local v155;
																				local v156;
																				local v157;
																				while true do
																					if (v143 == 3) then
																						v155 = (v152 - v146) + 1;
																						v156 = nil;
																						v157 = nil;
																						while true do
																							local v172 = 0;
																							local v173;
																							while true do
																								if (v172 == 0) then
																									v173 = 0;
																									while true do
																										if (v173 == 0) then
																											local v185 = 0;
																											while true do
																												if (v185 == 0) then
																													v156 = v144[v148];
																													v157 = v156[1];
																													v185 = 1;
																												end
																												if (1 == v185) then
																													v173 = 1;
																													break;
																												end
																											end
																										end
																										if (v173 == 1) then
																											if (v157 <= (1134 - (68 + 997))) then
																												if (v157 <= 34) then
																													if (v157 <= 16) then
																														if (v157 <= 7) then
																															if (v157 <= 3) then
																																if (v157 <= 1) then
																																	if (v157 > 0) then
																																		local v204 = 0;
																																		local v205;
																																		local v206;
																																		local v207;
																																		while true do
																																			if (v204 == 0) then
																																				v205 = 0;
																																				v206 = nil;
																																				v204 = 1;
																																			end
																																			if (v204 == 1) then
																																				v207 = nil;
																																				while true do
																																					if (v205 == 1) then
																																						for v627 = v206 + (1271 - (226 + 1044)), v156[4] do
																																							v207 = v207 .. v154[v627];
																																						end
																																						v154[v156[2]] = v207;
																																						break;
																																					end
																																					if (0 == v205) then
																																						local v571 = 0;
																																						while true do
																																							if (v571 == 0) then
																																								v206 = v156[3];
																																								v207 = v154[v206];
																																								v571 = 1;
																																							end
																																							if (1 == v571) then
																																								v205 = 1;
																																								break;
																																							end
																																						end
																																					end
																																				end
																																				break;
																																			end
																																		end
																																	else
																																		v154[v156[2]] = v154[v156[3]] * v154[v156[4]];
																																	end
																																elseif (v157 == 2) then
																																	local v209 = 0;
																																	local v210;
																																	local v211;
																																	while true do
																																		if (v209 == 0) then
																																			v210 = 0;
																																			v211 = nil;
																																			v209 = 1;
																																		end
																																		if (v209 == 1) then
																																			while true do
																																				if (0 == v210) then
																																					v211 = v156[8 - 6];
																																					do
																																						return v21(v154, v211, v149);
																																					end
																																					break;
																																				end
																																			end
																																			break;
																																		end
																																	end
																																else
																																	v154[v156[2]] = v154[v156[3]];
																																end
																															elseif (v157 <= 5) then
																																if (v157 > 4) then
																																	if (v156[2] < v154[v156[4]]) then
																																		v148 = v156[3];
																																	else
																																		v148 = v148 + 1;
																																	end
																																else
																																	local v214 = 0;
																																	local v215;
																																	while true do
																																		if (v214 == 0) then
																																			v215 = v156[2];
																																			v154[v215](v21(v154, v215 + 1, v156[3]));
																																			break;
																																		end
																																	end
																																end
																															elseif (v157 > 6) then
																																v154[v156[119 - (32 + 85)]][v156[3]] = v154[v156[4]];
																															elseif (v156[2] == v154[v156[4]]) then
																																v148 = v148 + 1;
																															else
																																v148 = v156[3];
																															end
																														elseif (v157 <= 11) then
																															if (v157 <= 9) then
																																if (v157 == 8) then
																																	local v218 = 0;
																																	local v219;
																																	local v220;
																																	local v221;
																																	local v222;
																																	while true do
																																		if (v218 == 1) then
																																			v221 = nil;
																																			v222 = nil;
																																			v218 = 2;
																																		end
																																		if (v218 == 0) then
																																			v219 = 0;
																																			v220 = nil;
																																			v218 = 1;
																																		end
																																		if (v218 == 2) then
																																			while true do
																																				if (v219 == 1) then
																																					v222 = 0;
																																					for v628 = v220, v156[4] do
																																						local v629 = 0;
																																						local v630;
																																						while true do
																																							if (0 == v629) then
																																								v630 = 0;
																																								while true do
																																									if (v630 == 0) then
																																										v222 = v222 + 1;
																																										v154[v628] = v221[v222];
																																										break;
																																									end
																																								end
																																								break;
																																							end
																																						end
																																					end
																																					break;
																																				end
																																				if (v219 == 0) then
																																					local v573 = 0;
																																					while true do
																																						if (v573 == 0) then
																																							v220 = v156[2];
																																							v221 = {v154[v220](v154[v220 + 1])};
																																							v573 = 1;
																																						end
																																						if (v573 == 1) then
																																							v219 = 1;
																																							break;
																																						end
																																					end
																																				end
																																			end
																																			break;
																																		end
																																	end
																																else
																																	do
																																		return;
																																	end
																																end
																															elseif (v157 == 10) then
																																local v223 = 0;
																																local v224;
																																local v225;
																																while true do
																																	if (0 == v223) then
																																		v224 = 0;
																																		v225 = nil;
																																		v223 = 1;
																																	end
																																	if (v223 == 1) then
																																		while true do
																																			if (v224 == 0) then
																																				v225 = v156[2];
																																				do
																																					return v154[v225](v21(v154, v225 + 1, v156[3]));
																																				end
																																				break;
																																			end
																																		end
																																		break;
																																	end
																																end
																															else
																																local v226 = 0;
																																local v227;
																																while true do
																																	if (v226 == 0) then
																																		v227 = v156[2];
																																		v154[v227] = v154[v227](v21(v154, v227 + 1, v156[3]));
																																		break;
																																	end
																																end
																															end
																														elseif (v157 <= 13) then
																															if (v157 > 12) then
																																if (v154[v156[2]] == v156[4]) then
																																	v148 = v148 + 1;
																																else
																																	v148 = v156[3];
																																end
																															else
																																v154[v156[2 + 0]][v156[3]] = v156[1 + 3];
																															end
																														elseif (v157 <= 14) then
																															v154[v156[2]] = v154[v156[3]] + v154[v156[961 - (892 + 65)]];
																														elseif (v157 > 15) then
																															if (v154[v156[2]] < v156[4]) then
																																v148 = v148 + 1;
																															else
																																v148 = v156[3];
																															end
																														else
																															local v439 = 0;
																															local v440;
																															local v441;
																															while true do
																																if (0 == v439) then
																																	v440 = 0;
																																	v441 = nil;
																																	v439 = 1;
																																end
																																if (v439 == 1) then
																																	while true do
																																		if (v440 == 0) then
																																			v441 = v156[2];
																																			v154[v441] = v154[v441](v154[v441 + 1]);
																																			break;
																																		end
																																	end
																																	break;
																																end
																															end
																														end
																													elseif (v157 <= (59 - 34)) then
																														if (v157 <= 20) then
																															if (v157 <= 18) then
																																if (v157 > 17) then
																																	v154[v156[2]] = v154[v156[3]] - v154[v156[4]];
																																else
																																	local v232 = 0;
																																	local v233;
																																	local v234;
																																	while true do
																																		if (0 == v232) then
																																			v233 = 0;
																																			v234 = nil;
																																			v232 = 1;
																																		end
																																		if (1 == v232) then
																																			while true do
																																				if (v233 == 0) then
																																					v234 = v156[2];
																																					v154[v234](v21(v154, v234 + 1, v149));
																																					break;
																																				end
																																			end
																																			break;
																																		end
																																	end
																																end
																															elseif (v157 == 19) then
																																local v235 = 0;
																																local v236;
																																local v237;
																																local v238;
																																local v239;
																																local v240;
																																while true do
																																	if (1 == v235) then
																																		v238 = nil;
																																		v239 = nil;
																																		v235 = 2;
																																	end
																																	if (v235 == 0) then
																																		v236 = 0;
																																		v237 = nil;
																																		v235 = 1;
																																	end
																																	if (v235 == 2) then
																																		v240 = nil;
																																		while true do
																																			if (v236 == 0) then
																																				local v576 = 0;
																																				while true do
																																					if (v576 == 0) then
																																						v237 = v156[2];
																																						v238, v239 = v147(v154[v237](v154[v237 + 1]));
																																						v576 = 1;
																																					end
																																					if (v576 == 1) then
																																						v236 = 1;
																																						break;
																																					end
																																				end
																																			end
																																			if (v236 == 1) then
																																				local v577 = 0;
																																				while true do
																																					if (1 == v577) then
																																						v236 = 2;
																																						break;
																																					end
																																					if (v577 == 0) then
																																						v149 = (v239 + v237) - 1;
																																						v240 = 0;
																																						v577 = 1;
																																					end
																																				end
																																			end
																																			if (v236 == 2) then
																																				for v631 = v237, v149 do
																																					local v632 = 0;
																																					local v633;
																																					while true do
																																						if (v632 == 0) then
																																							v633 = 0;
																																							while true do
																																								if (0 == v633) then
																																									v240 = v240 + 1;
																																									v154[v631] = v238[v240];
																																									break;
																																								end
																																							end
																																							break;
																																						end
																																					end
																																				end
																																				break;
																																			end
																																		end
																																		break;
																																	end
																																end
																															else
																																local v241 = 0;
																																local v242;
																																local v243;
																																while true do
																																	if (v241 == 0) then
																																		v242 = 0;
																																		v243 = nil;
																																		v241 = 1;
																																	end
																																	if (v241 == 1) then
																																		while true do
																																			if (v242 == 1) then
																																				for v634 = v243, v149 do
																																					local v635 = 0;
																																					local v636;
																																					local v637;
																																					while true do
																																						if (0 == v635) then
																																							v636 = 0;
																																							v637 = nil;
																																							v635 = 1;
																																						end
																																						if (v635 == 1) then
																																							while true do
																																								if (v636 == 0) then
																																									v637 = v150[v634 - v243];
																																									v154[v634] = v637;
																																									break;
																																								end
																																							end
																																							break;
																																						end
																																					end
																																				end
																																				break;
																																			end
																																			if (v242 == 0) then
																																				local v578 = 0;
																																				while true do
																																					if (v578 == 0) then
																																						v243 = v156[3 - 1];
																																						v149 = (v243 + v155) - 1;
																																						v578 = 1;
																																					end
																																					if (v578 == 1) then
																																						v242 = 1;
																																						break;
																																					end
																																				end
																																			end
																																		end
																																		break;
																																	end
																																end
																															end
																														elseif (v157 <= 22) then
																															if (v157 > (38 - 17)) then
																																if (v154[v156[2]] <= v154[v156[4]]) then
																																	v148 = v148 + 1;
																																else
																																	v148 = v156[3];
																																end
																															else
																																v154[v156[2]] = v156[3] ^ v154[v156[4]];
																															end
																														elseif (v157 <= 23) then
																															if (v154[v156[2]] ~= v154[v156[4]]) then
																																v148 = v148 + (351 - (87 + 263));
																															else
																																v148 = v156[3];
																															end
																														elseif (v157 > 24) then
																															do
																																return;
																															end
																														else
																															local v444 = 0;
																															local v445;
																															while true do
																																if (v444 == 0) then
																																	v445 = v156[2];
																																	v154[v445] = v154[v445](v154[v445 + 1]);
																																	break;
																																end
																															end
																														end
																													elseif (v157 <= 29) then
																														if (v157 <= 27) then
																															if (v157 > 26) then
																																v154[v156[2]] = v154[v156[3]] / v156[4];
																															else
																																v154[v156[182 - (67 + 113)]] = v154[v156[3]] % v154[v156[3 + 1]];
																															end
																														elseif (v157 > 28) then
																															v154[v156[4 - 2]] = v154[v156[3]] % v156[4];
																														else
																															local v248 = 0;
																															local v249;
																															local v250;
																															while true do
																																if (v248 == 1) then
																																	while true do
																																		if (1 == v249) then
																																			for v638 = v250, v149 do
																																				local v639 = 0;
																																				local v640;
																																				while true do
																																					if (v639 == 0) then
																																						v640 = v150[v638 - v250];
																																						v154[v638] = v640;
																																						break;
																																					end
																																				end
																																			end
																																			break;
																																		end
																																		if (0 == v249) then
																																			local v579 = 0;
																																			while true do
																																				if (v579 == 0) then
																																					v250 = v156[2];
																																					v149 = (v250 + v155) - 1;
																																					v579 = 1;
																																				end
																																				if (v579 == 1) then
																																					v249 = 1;
																																					break;
																																				end
																																			end
																																		end
																																	end
																																	break;
																																end
																																if (v248 == 0) then
																																	v249 = 0;
																																	v250 = nil;
																																	v248 = 1;
																																end
																															end
																														end
																													elseif (v157 <= 31) then
																														if (v157 > 30) then
																															v154[v156[2]] = v156[3] - v154[v156[4]];
																														else
																															v154[v156[2 + 0]] = v68[v156[3]];
																														end
																													elseif (v157 <= 32) then
																														if v154[v156[2]] then
																															v148 = v148 + 1;
																														else
																															v148 = v156[3];
																														end
																													elseif (v157 > 33) then
																														local v447 = 0;
																														local v448;
																														while true do
																															if (v447 == 0) then
																																v448 = v156[2];
																																v154[v448] = v154[v448]();
																																break;
																															end
																														end
																													else
																														local v449 = 0;
																														local v450;
																														local v451;
																														while true do
																															if (v449 == 1) then
																																while true do
																																	if (0 == v450) then
																																		v451 = v156[2];
																																		v154[v451](v21(v154, v451 + 1, v149));
																																		break;
																																	end
																																end
																																break;
																															end
																															if (v449 == 0) then
																																v450 = 0;
																																v451 = nil;
																																v449 = 1;
																															end
																														end
																													end
																												elseif (v157 <= (202 - 151)) then
																													if (v157 <= 42) then
																														if (v157 <= (990 - (802 + 150))) then
																															if (v157 <= 36) then
																																if (v157 > 35) then
																																	local v254 = 0;
																																	local v255;
																																	while true do
																																		if (v254 == 0) then
																																			v255 = v156[2];
																																			do
																																				return v21(v154, v255, v255 + v156[3]);
																																			end
																																			break;
																																		end
																																	end
																																else
																																	v154[v156[2]] = v43(v145[v156[3]], nil, v68);
																																end
																															elseif (v157 == 37) then
																																local v257 = 0;
																																local v258;
																																local v259;
																																while true do
																																	if (1 == v257) then
																																		while true do
																																			if (v258 == 0) then
																																				v259 = v154[v156[10 - 6]];
																																				if not v259 then
																																					v148 = v148 + 1;
																																				else
																																					local v674 = 0;
																																					local v675;
																																					while true do
																																						if (v674 == 0) then
																																							v675 = 0;
																																							while true do
																																								if (v675 == 0) then
																																									v154[v156[2]] = v259;
																																									v148 = v156[3];
																																									break;
																																								end
																																							end
																																							break;
																																						end
																																					end
																																				end
																																				break;
																																			end
																																		end
																																		break;
																																	end
																																	if (v257 == 0) then
																																		v258 = 0;
																																		v259 = nil;
																																		v257 = 1;
																																	end
																																end
																															else
																																v67[v156[3]] = v154[v156[2]];
																															end
																														elseif (v157 <= 40) then
																															if (v157 > 39) then
																																local v262 = 0;
																																local v263;
																																local v264;
																																local v265;
																																while true do
																																	if (v262 == 0) then
																																		v263 = 0;
																																		v264 = nil;
																																		v262 = 1;
																																	end
																																	if (v262 == 1) then
																																		v265 = nil;
																																		while true do
																																			if (v263 == 1) then
																																				v154[v264 + 1] = v265;
																																				v154[v264] = v265[v156[4]];
																																				break;
																																			end
																																			if (v263 == 0) then
																																				local v584 = 0;
																																				while true do
																																					if (0 == v584) then
																																						v264 = v156[2];
																																						v265 = v154[v156[3]];
																																						v584 = 1;
																																					end
																																					if (v584 == 1) then
																																						v263 = 1;
																																						break;
																																					end
																																				end
																																			end
																																		end
																																		break;
																																	end
																																end
																															elseif (v154[v156[2]] ~= v156[4]) then
																																v148 = v148 + 1;
																															else
																																v148 = v156[3];
																															end
																														elseif (v157 == 41) then
																															local v266 = 0;
																															local v267;
																															local v268;
																															local v269;
																															local v270;
																															while true do
																																if (v266 == 1) then
																																	v269 = nil;
																																	v270 = nil;
																																	v266 = 2;
																																end
																																if (v266 == 2) then
																																	while true do
																																		if (1 == v267) then
																																			v270 = 0 + 0;
																																			for v641 = v268, v156[4] do
																																				local v642 = 0;
																																				while true do
																																					if (0 == v642) then
																																						v270 = v270 + 1;
																																						v154[v641] = v269[v270];
																																						break;
																																					end
																																				end
																																			end
																																			break;
																																		end
																																		if (v267 == 0) then
																																			local v585 = 0;
																																			while true do
																																				if (v585 == 0) then
																																					v268 = v156[2];
																																					v269 = {v154[v268](v21(v154, v268 + (1 - 0), v149))};
																																					v585 = 1;
																																				end
																																				if (v585 == 1) then
																																					v267 = 1;
																																					break;
																																				end
																																			end
																																		end
																																	end
																																	break;
																																end
																																if (v266 == 0) then
																																	v267 = 0;
																																	v268 = nil;
																																	v266 = 1;
																																end
																															end
																														else
																															local v271 = 0;
																															local v272;
																															local v273;
																															local v274;
																															local v275;
																															while true do
																																if (v271 == 2) then
																																	while true do
																																		if (v272 == 1) then
																																			local v586 = 0;
																																			while true do
																																				if (1 == v586) then
																																					v272 = 2;
																																					break;
																																				end
																																				if (v586 == 0) then
																																					v275 = {};
																																					v274 = v18({}, {[v7("\121\69\93\0\55\67\98", "\83\38\26\52\110")]=function(v716, v717)
																																						local v718 = 0;
																																						local v719;
																																						local v720;
																																						while true do
																																							if (v718 == 1) then
																																								while true do
																																									if (v719 == 0) then
																																										local v787 = 0;
																																										while true do
																																											if (v787 == 0) then
																																												v720 = v275[v717];
																																												return v720[998 - (915 + 82)][v720[5 - 3]];
																																											end
																																										end
																																									end
																																								end
																																								break;
																																							end
																																							if (v718 == 0) then
																																								v719 = 0;
																																								v720 = nil;
																																								v718 = 1;
																																							end
																																						end
																																					end,[v7("\103\40\41\67\79\30\41\66\93\15", "\38\56\119\71")]=function(v721, v722, v723)
																																						local v724 = 0;
																																						local v725;
																																						local v726;
																																						while true do
																																							if (v724 == 0) then
																																								v725 = 0;
																																								v726 = nil;
																																								v724 = 1;
																																							end
																																							if (v724 == 1) then
																																								while true do
																																									if (0 == v725) then
																																										v726 = v275[v722];
																																										v726[1][v726[2]] = v723;
																																										break;
																																									end
																																								end
																																								break;
																																							end
																																						end
																																					end});
																																					v586 = 1;
																																				end
																																			end
																																		end
																																		if (v272 == 0) then
																																			local v587 = 0;
																																			while true do
																																				if (v587 == 0) then
																																					v273 = v145[v156[3]];
																																					v274 = nil;
																																					v587 = 1;
																																				end
																																				if (1 == v587) then
																																					v272 = 1;
																																					break;
																																				end
																																			end
																																		end
																																		if (2 == v272) then
																																			for v643 = 1, v156[4] do
																																				local v644 = 0;
																																				local v645;
																																				local v646;
																																				while true do
																																					if (v644 == 0) then
																																						v645 = 0;
																																						v646 = nil;
																																						v644 = 1;
																																					end
																																					if (v644 == 1) then
																																						while true do
																																							if (v645 == 0) then
																																								local v767 = 0;
																																								while true do
																																									if (v767 == 0) then
																																										v148 = v148 + 1;
																																										v646 = v144[v148];
																																										v767 = 1;
																																									end
																																									if (v767 == 1) then
																																										v645 = 1;
																																										break;
																																									end
																																								end
																																							end
																																							if (v645 == 1) then
																																								if (v646[1] == 3) then
																																									v275[v643 - 1] = {v154,v646[3]};
																																								else
																																									v275[v643 - 1] = {v67,v646[3]};
																																								end
																																								v153[#v153 + 1] = v275;
																																								break;
																																							end
																																						end
																																						break;
																																					end
																																				end
																																			end
																																			v154[v156[2]] = v43(v273, v274, v68);
																																			break;
																																		end
																																	end
																																	break;
																																end
																																if (1 == v271) then
																																	v274 = nil;
																																	v275 = nil;
																																	v271 = 2;
																																end
																																if (v271 == 0) then
																																	v272 = 0;
																																	v273 = nil;
																																	v271 = 1;
																																end
																															end
																														end
																													elseif (v157 <= 46) then
																														if (v157 <= 44) then
																															if (v157 > 43) then
																																v154[v156[2]] = v154[v156[3]] - v156[4];
																															elseif (v154[v156[2]] ~= v154[v156[4]]) then
																																v148 = v148 + 1;
																															else
																																v148 = v156[2 + 1];
																															end
																														elseif (v157 > 45) then
																															local v277 = 0;
																															local v278;
																															local v279;
																															local v280;
																															local v281;
																															local v282;
																															while true do
																																if (v277 == 3) then
																																	if v282 then
																																		local v558 = 0;
																																		local v559;
																																		while true do
																																			if (v558 == 0) then
																																				v559 = 0;
																																				while true do
																																					if (v559 == 0) then
																																						v154[v280] = v282;
																																						v148 = v156[3];
																																						break;
																																					end
																																				end
																																				break;
																																			end
																																		end
																																	else
																																		v148 = v148 + (1188 - (1069 + 118));
																																	end
																																	break;
																																end
																																if (v277 == 0) then
																																	v278 = v156[2];
																																	v279 = v156[4];
																																	v277 = 1;
																																end
																																if (v277 == 2) then
																																	for v527 = 1 - 0, v279 do
																																		v154[v280 + v527] = v281[v527];
																																	end
																																	v282 = v281[1];
																																	v277 = 3;
																																end
																																if (v277 == 1) then
																																	v280 = v278 + 2;
																																	v281 = {v154[v278](v154[v278 + 1], v154[v280])};
																																	v277 = 2;
																																end
																															end
																														else
																															do
																																return v154[v156[2]];
																															end
																														end
																													elseif (v157 <= 48) then
																														if (v157 > (106 - 59)) then
																															v154[v156[2]] = #v154[v156[3]];
																														else
																															v154[v156[2]] = v154[v156[3]] % v154[v156[4]];
																														end
																													elseif (v157 <= 49) then
																														local v285 = 0;
																														local v286;
																														local v287;
																														local v288;
																														while true do
																															if (v285 == 0) then
																																v286 = 0;
																																v287 = nil;
																																v285 = 1;
																															end
																															if (v285 == 1) then
																																v288 = nil;
																																while true do
																																	if (v286 == 1) then
																																		for v647 = v287 + 1, v156[4] do
																																			v288 = v288 .. v154[v647];
																																		end
																																		v154[v156[2]] = v288;
																																		break;
																																	end
																																	if (v286 == 0) then
																																		local v590 = 0;
																																		while true do
																																			if (v590 == 1) then
																																				v286 = 1;
																																				break;
																																			end
																																			if (v590 == 0) then
																																				v287 = v156[3];
																																				v288 = v154[v287];
																																				v590 = 1;
																																			end
																																		end
																																	end
																																end
																																break;
																															end
																														end
																													elseif (v157 == 50) then
																														local v454 = 0;
																														local v455;
																														while true do
																															if (v454 == 0) then
																																v455 = v156[2];
																																v154[v455] = v154[v455](v21(v154, v455 + 1, v156[3]));
																																break;
																															end
																														end
																													else
																														local v456 = 0;
																														local v457;
																														local v458;
																														while true do
																															if (1 == v456) then
																																while true do
																																	if (v457 == 0) then
																																		v458 = v154[v156[4]];
																																		if not v458 then
																																			v148 = v148 + 1;
																																		else
																																			local v727 = 0;
																																			local v728;
																																			while true do
																																				if (v727 == 0) then
																																					v728 = 0;
																																					while true do
																																						if (0 == v728) then
																																							v154[v156[2]] = v458;
																																							v148 = v156[3];
																																							break;
																																						end
																																					end
																																					break;
																																				end
																																			end
																																		end
																																		break;
																																	end
																																end
																																break;
																															end
																															if (0 == v456) then
																																v457 = 0;
																																v458 = nil;
																																v456 = 1;
																															end
																														end
																													end
																												elseif (v157 <= 60) then
																													if (v157 <= 55) then
																														if (v157 <= 53) then
																															if (v157 > 52) then
																																if (v156[2] < v154[v156[4]]) then
																																	v148 = v156[3];
																																else
																																	v148 = v148 + 1;
																																end
																															else
																																v154[v156[2]] = v154[v156[3]] % v156[4];
																															end
																														elseif (v157 == 54) then
																															v148 = v156[6 - 3];
																														elseif not v154[v156[2]] then
																															v148 = v148 + 1;
																														else
																															v148 = v156[1 + 2];
																														end
																													elseif (v157 <= 57) then
																														if (v157 > 56) then
																															v148 = v156[3];
																														else
																															local v292 = 0;
																															local v293;
																															local v294;
																															local v295;
																															local v296;
																															while true do
																																if (v292 == 2) then
																																	while true do
																																		if (v293 == 1) then
																																			v296 = v156[3];
																																			for v648 = 1, v296 do
																																				v295[v648] = v154[v294 + v648];
																																			end
																																			break;
																																		end
																																		if (v293 == 0) then
																																			local v592 = 0;
																																			while true do
																																				if (v592 == 0) then
																																					v294 = v156[2];
																																					v295 = v154[v294];
																																					v592 = 1;
																																				end
																																				if (v592 == 1) then
																																					v293 = 1;
																																					break;
																																				end
																																			end
																																		end
																																	end
																																	break;
																																end
																																if (1 == v292) then
																																	v295 = nil;
																																	v296 = nil;
																																	v292 = 2;
																																end
																																if (v292 == 0) then
																																	v293 = 0;
																																	v294 = nil;
																																	v292 = 1;
																																end
																															end
																														end
																													elseif (v157 <= (102 - 44)) then
																														v154[v156[2]][v154[v156[3]]] = v156[4];
																													elseif (v157 == 59) then
																														v154[v156[2]] = v154[v156[3]] / v154[v156[4]];
																													elseif (v154[v156[2]] < v154[v156[4]]) then
																														v148 = v148 + 1;
																													else
																														v148 = v156[3];
																													end
																												elseif (v157 <= 64) then
																													if (v157 <= 62) then
																														if (v157 == 61) then
																															local v299 = 0;
																															local v300;
																															local v301;
																															local v302;
																															while true do
																																if (v299 == 1) then
																																	v302 = nil;
																																	while true do
																																		if (v300 == 0) then
																																			local v593 = 0;
																																			while true do
																																				if (v593 == 1) then
																																					v300 = 1;
																																					break;
																																				end
																																				if (v593 == 0) then
																																					v301 = v156[2];
																																					v302 = v154[v156[3]];
																																					v593 = 1;
																																				end
																																			end
																																		end
																																		if (1 == v300) then
																																			v154[v301 + 1] = v302;
																																			v154[v301] = v302[v154[v156[4]]];
																																			break;
																																		end
																																	end
																																	break;
																																end
																																if (v299 == 0) then
																																	v300 = 0;
																																	v301 = nil;
																																	v299 = 1;
																																end
																															end
																														else
																															local v303 = 0;
																															local v304;
																															local v305;
																															while true do
																																if (v303 == 0) then
																																	v304 = 0;
																																	v305 = nil;
																																	v303 = 1;
																																end
																																if (v303 == 1) then
																																	while true do
																																		if (v304 == 0) then
																																			v305 = v156[2];
																																			v154[v305] = v154[v305]();
																																			break;
																																		end
																																	end
																																	break;
																																end
																															end
																														end
																													elseif (v157 > 63) then
																														v154[v156[2 + 0]][v154[v156[3]]] = v154[v156[4]];
																													else
																														local v308 = 0;
																														local v309;
																														local v310;
																														while true do
																															if (v308 == 0) then
																																v309 = 0;
																																v310 = nil;
																																v308 = 1;
																															end
																															if (1 == v308) then
																																while true do
																																	if (v309 == 0) then
																																		v310 = v156[2];
																																		v154[v310](v154[v310 + 1]);
																																		break;
																																	end
																																end
																																break;
																															end
																														end
																													end
																												elseif (v157 <= 66) then
																													if (v157 == 65) then
																														v154[v156[2]] = v67[v156[3]];
																													else
																														v154[v156[2]] = {};
																													end
																												elseif (v157 <= 67) then
																													v154[v156[2]] = v156[3];
																												elseif (v157 > 68) then
																													if (v154[v156[2]] <= v154[v156[4]]) then
																														v148 = v148 + 1;
																													else
																														v148 = v156[3];
																													end
																												else
																													local v462 = 0;
																													local v463;
																													while true do
																														if (v462 == 0) then
																															v463 = v156[2];
																															do
																																return v21(v154, v463, v149);
																															end
																															break;
																														end
																													end
																												end
																											elseif (v157 <= 104) then
																												if (v157 <= 86) then
																													if (v157 <= 77) then
																														if (v157 <= (864 - (368 + 423))) then
																															if (v157 <= 71) then
																																if (v157 > 70) then
																																	local v316 = 0;
																																	local v317;
																																	local v318;
																																	while true do
																																		if (v316 == 1) then
																																			while true do
																																				if (v317 == 0) then
																																					v318 = v156[2];
																																					v154[v318](v154[v318 + 1]);
																																					break;
																																				end
																																			end
																																			break;
																																		end
																																		if (0 == v316) then
																																			v317 = 0;
																																			v318 = nil;
																																			v316 = 1;
																																		end
																																	end
																																else
																																	v68[v156[3]] = v154[v156[6 - 4]];
																																end
																															elseif (v157 > (90 - (10 + 8))) then
																																if (v154[v156[2]] == v154[v156[4]]) then
																																	v148 = v148 + 1;
																																else
																																	v148 = v156[3];
																																end
																															elseif (v156[2] < v154[v156[4]]) then
																																v148 = v148 + 1;
																															else
																																v148 = v156[3];
																															end
																														elseif (v157 <= 75) then
																															if (v157 == 74) then
																																local v321 = 0;
																																local v322;
																																local v323;
																																local v324;
																																local v325;
																																local v326;
																																while true do
																																	if (v321 == 0) then
																																		v322 = v156[2];
																																		v323 = v156[4];
																																		v321 = 1;
																																	end
																																	if (v321 == 3) then
																																		if v326 then
																																			local v563 = 0;
																																			local v564;
																																			while true do
																																				if (v563 == 0) then
																																					v564 = 0;
																																					while true do
																																						if (v564 == 0) then
																																							v154[v324] = v326;
																																							v148 = v156[3];
																																							break;
																																						end
																																					end
																																					break;
																																				end
																																			end
																																		else
																																			v148 = v148 + 1;
																																		end
																																		break;
																																	end
																																	if (v321 == 2) then
																																		for v532 = 1, v323 do
																																			v154[v324 + v532] = v325[v532];
																																		end
																																		v326 = v325[1];
																																		v321 = 3;
																																	end
																																	if (v321 == 1) then
																																		v324 = v322 + 2;
																																		v325 = {v154[v322](v154[v322 + 1], v154[v324])};
																																		v321 = 2;
																																	end
																																end
																															elseif (v154[v156[2]] == v156[4]) then
																																v148 = v148 + 1;
																															else
																																v148 = v156[3];
																															end
																														elseif (v157 > 76) then
																															v154[v156[2]] = #v154[v156[3]];
																														elseif not v154[v156[7 - 5]] then
																															v148 = v148 + 1;
																														else
																															v148 = v156[445 - (416 + 26)];
																														end
																													elseif (v157 <= 81) then
																														if (v157 <= (252 - 173)) then
																															if (v157 == 78) then
																																v154[v156[2]] = v154[v156[3]] + v156[4];
																															elseif (v154[v156[2]] < v156[4]) then
																																v148 = v148 + 1;
																															else
																																v148 = v156[3];
																															end
																														elseif (v157 > 80) then
																															if v154[v156[2]] then
																																v148 = v148 + 1;
																															else
																																v148 = v156[3];
																															end
																														else
																															local v329 = 0;
																															local v330;
																															local v331;
																															local v332;
																															local v333;
																															while true do
																																if (v329 == 1) then
																																	v332 = nil;
																																	v333 = nil;
																																	v329 = 2;
																																end
																																if (v329 == 0) then
																																	v330 = 0;
																																	v331 = nil;
																																	v329 = 1;
																																end
																																if (v329 == 2) then
																																	while true do
																																		if (v330 == 0) then
																																			local v601 = 0;
																																			while true do
																																				if (v601 == 0) then
																																					v331 = v156[2];
																																					v332 = {v154[v331](v21(v154, v331 + 1, v149))};
																																					v601 = 1;
																																				end
																																				if (v601 == 1) then
																																					v330 = 1;
																																					break;
																																				end
																																			end
																																		end
																																		if (v330 == 1) then
																																			v333 = 0 - 0;
																																			for v651 = v331, v156[4] do
																																				local v652 = 0;
																																				local v653;
																																				while true do
																																					if (v652 == 0) then
																																						v653 = 0;
																																						while true do
																																							if (0 == v653) then
																																								v333 = v333 + 1;
																																								v154[v651] = v332[v333];
																																								break;
																																							end
																																						end
																																						break;
																																					end
																																				end
																																			end
																																			break;
																																		end
																																	end
																																	break;
																																end
																															end
																														end
																													elseif (v157 <= (521 - (145 + 293))) then
																														if (v157 == 82) then
																															if (v154[v156[2]] < v154[v156[434 - (44 + 386)]]) then
																																v148 = v148 + 1;
																															else
																																v148 = v156[3];
																															end
																														else
																															v154[v156[2]] = v156[1489 - (998 + 488)] + v154[v156[2 + 2]];
																														end
																													elseif (v157 <= 84) then
																														local v335 = 0;
																														local v336;
																														local v337;
																														local v338;
																														local v339;
																														while true do
																															if (1 == v335) then
																																v149 = (v338 + v336) - 1;
																																v339 = 0;
																																v335 = 2;
																															end
																															if (v335 == 2) then
																																for v535 = v336, v149 do
																																	local v536 = 0;
																																	local v537;
																																	while true do
																																		if (v536 == 0) then
																																			v537 = 0;
																																			while true do
																																				if (v537 == 0) then
																																					v339 = v339 + 1;
																																					v154[v535] = v337[v339];
																																					break;
																																				end
																																			end
																																			break;
																																		end
																																	end
																																end
																																break;
																															end
																															if (v335 == 0) then
																																v336 = v156[2];
																																v337, v338 = v147(v154[v336](v21(v154, v336 + 1, v149)));
																																v335 = 1;
																															end
																														end
																													elseif (v157 > 85) then
																														v154[v156[2]] = v68[v156[3]];
																													else
																														v68[v156[3]] = v154[v156[2 + 0]];
																													end
																												elseif (v157 <= 95) then
																													if (v157 <= 90) then
																														if (v157 <= 88) then
																															if (v157 == 87) then
																																local v340 = 0;
																																local v341;
																																while true do
																																	if (0 == v340) then
																																		v341 = v156[2];
																																		v154[v341] = v154[v341](v21(v154, v341 + (773 - (201 + 571)), v149));
																																		break;
																																	end
																																end
																															else
																																v154[v156[2]]();
																															end
																														elseif (v157 > 89) then
																															local v342 = 0;
																															local v343;
																															while true do
																																if (v342 == 0) then
																																	v343 = v156[2];
																																	v154[v343](v21(v154, v343 + 1, v156[3]));
																																	break;
																																end
																															end
																														else
																															do
																																return v154[v156[2]];
																															end
																														end
																													elseif (v157 <= 92) then
																														if (v157 > 91) then
																															v154[v156[2]] = v154[v156[3]];
																														else
																															v154[v156[2]] = v154[v156[3]][v156[4]];
																														end
																													elseif (v157 <= 93) then
																														local v348 = 0;
																														local v349;
																														local v350;
																														local v351;
																														while true do
																															if (v348 == 0) then
																																v349 = 0;
																																v350 = nil;
																																v348 = 1;
																															end
																															if (v348 == 1) then
																																v351 = nil;
																																while true do
																																	if (v349 == 0) then
																																		local v602 = 0;
																																		while true do
																																			if (v602 == 1) then
																																				v349 = 1;
																																				break;
																																			end
																																			if (v602 == 0) then
																																				v350 = v156[2];
																																				v351 = v154[v156[3]];
																																				v602 = 1;
																																			end
																																		end
																																	end
																																	if (v349 == 1) then
																																		v154[v350 + 1] = v351;
																																		v154[v350] = v351[v154[v156[4]]];
																																		break;
																																	end
																																end
																																break;
																															end
																														end
																													elseif (v157 == (1232 - (116 + 1022))) then
																														v154[v156[2]][v154[v156[3]]] = v156[4];
																													else
																														local v477 = 0;
																														local v478;
																														while true do
																															if (v477 == 0) then
																																v478 = v156[8 - 6];
																																v154[v478] = v154[v478](v21(v154, v478 + 1 + 0, v149));
																																break;
																															end
																														end
																													end
																												elseif (v157 <= 99) then
																													if (v157 <= 97) then
																														if (v157 > (350 - 254)) then
																															local v352 = 0;
																															local v353;
																															local v354;
																															local v355;
																															while true do
																																if (v352 == 2) then
																																	if (v354 > 0) then
																																		if (v355 <= v154[v353 + 1]) then
																																			local v654 = 0;
																																			while true do
																																				if (v654 == 0) then
																																					v148 = v156[3];
																																					v154[v353 + 3] = v355;
																																					break;
																																				end
																																			end
																																		end
																																	elseif (v355 >= v154[v353 + (860 - (814 + 45))]) then
																																		local v655 = 0;
																																		while true do
																																			if (v655 == 0) then
																																				v148 = v156[3];
																																				v154[v353 + (7 - 4)] = v355;
																																				break;
																																			end
																																		end
																																	end
																																	break;
																																end
																																if (v352 == 0) then
																																	v353 = v156[7 - 5];
																																	v354 = v154[v353 + 2];
																																	v352 = 1;
																																end
																																if (v352 == 1) then
																																	v355 = v154[v353] + v354;
																																	v154[v353] = v355;
																																	v352 = 2;
																																end
																															end
																														else
																															local v356 = 0;
																															local v357;
																															local v358;
																															local v359;
																															while true do
																																if (v356 == 1) then
																																	v359 = nil;
																																	while true do
																																		if (v357 == 1) then
																																			for v656 = v358 + 1, v156[3] do
																																				v15(v359, v154[v656]);
																																			end
																																			break;
																																		end
																																		if (0 == v357) then
																																			local v606 = 0;
																																			while true do
																																				if (1 == v606) then
																																					v357 = 1;
																																					break;
																																				end
																																				if (v606 == 0) then
																																					v358 = v156[2];
																																					v359 = v154[v358];
																																					v606 = 1;
																																				end
																																			end
																																		end
																																	end
																																	break;
																																end
																																if (v356 == 0) then
																																	v357 = 0;
																																	v358 = nil;
																																	v356 = 1;
																																end
																															end
																														end
																													elseif (v157 == 98) then
																														local v360 = 0;
																														local v361;
																														local v362;
																														local v363;
																														local v364;
																														local v365;
																														while true do
																															if (1 == v360) then
																																v363 = nil;
																																v364 = nil;
																																v360 = 2;
																															end
																															if (v360 == 2) then
																																v365 = nil;
																																while true do
																																	if (v361 == 1) then
																																		local v607 = 0;
																																		while true do
																																			if (v607 == 1) then
																																				v361 = 2;
																																				break;
																																			end
																																			if (v607 == 0) then
																																				v149 = (v364 + v362) - 1;
																																				v365 = 0;
																																				v607 = 1;
																																			end
																																		end
																																	end
																																	if (v361 == 2) then
																																		for v657 = v362, v149 do
																																			local v658 = 0;
																																			local v659;
																																			while true do
																																				if (v658 == 0) then
																																					v659 = 0;
																																					while true do
																																						if (0 == v659) then
																																							v365 = v365 + 1;
																																							v154[v657] = v363[v365];
																																							break;
																																						end
																																					end
																																					break;
																																				end
																																			end
																																		end
																																		break;
																																	end
																																	if (0 == v361) then
																																		local v608 = 0;
																																		while true do
																																			if (v608 == 1) then
																																				v361 = 1;
																																				break;
																																			end
																																			if (v608 == 0) then
																																				v362 = v156[2];
																																				v363, v364 = v147(v154[v362](v21(v154, v362 + 1, v156[3])));
																																				v608 = 1;
																																			end
																																		end
																																	end
																																end
																																break;
																															end
																															if (v360 == 0) then
																																v361 = 0;
																																v362 = nil;
																																v360 = 1;
																															end
																														end
																													else
																														local v366 = 0;
																														local v367;
																														local v368;
																														local v369;
																														while true do
																															if (v366 == 2) then
																																if (v368 > 0) then
																																	if (v369 <= v154[v367 + 1]) then
																																		local v660 = 0;
																																		local v661;
																																		while true do
																																			if (v660 == 0) then
																																				v661 = 0;
																																				while true do
																																					if (v661 == 0) then
																																						v148 = v156[3];
																																						v154[v367 + 3] = v369;
																																						break;
																																					end
																																				end
																																				break;
																																			end
																																		end
																																	end
																																elseif (v369 >= v154[v367 + 1]) then
																																	local v662 = 0;
																																	while true do
																																		if (v662 == 0) then
																																			v148 = v156[3];
																																			v154[v367 + 3] = v369;
																																			break;
																																		end
																																	end
																																end
																																break;
																															end
																															if (v366 == 0) then
																																v367 = v156[2];
																																v368 = v154[v367 + 2];
																																v366 = 1;
																															end
																															if (v366 == 1) then
																																v369 = v154[v367] + v368;
																																v154[v367] = v369;
																																v366 = 2;
																															end
																														end
																													end
																												elseif (v157 <= 101) then
																													if (v157 == 100) then
																														local v370 = 0;
																														local v371;
																														local v372;
																														local v373;
																														local v374;
																														local v375;
																														while true do
																															if (v370 == 1) then
																																v373 = nil;
																																v374 = nil;
																																v370 = 2;
																															end
																															if (v370 == 2) then
																																v375 = nil;
																																while true do
																																	if (v371 == 2) then
																																		for v663 = v372, v149 do
																																			local v664 = 0;
																																			while true do
																																				if (v664 == 0) then
																																					v375 = v375 + 1;
																																					v154[v663] = v373[v375];
																																					break;
																																				end
																																			end
																																		end
																																		break;
																																	end
																																	if (0 == v371) then
																																		local v609 = 0;
																																		while true do
																																			if (v609 == 1) then
																																				v371 = 1;
																																				break;
																																			end
																																			if (0 == v609) then
																																				v372 = v156[2];
																																				v373, v374 = v147(v154[v372](v21(v154, v372 + 1, v149)));
																																				v609 = 1;
																																			end
																																		end
																																	end
																																	if (v371 == 1) then
																																		local v610 = 0;
																																		while true do
																																			if (v610 == 1) then
																																				v371 = 2;
																																				break;
																																			end
																																			if (v610 == 0) then
																																				v149 = (v374 + v372) - 1;
																																				v375 = 0;
																																				v610 = 1;
																																			end
																																		end
																																	end
																																end
																																break;
																															end
																															if (v370 == 0) then
																																v371 = 0;
																																v372 = nil;
																																v370 = 1;
																															end
																														end
																													else
																														v154[v156[2]] = {};
																													end
																												elseif (v157 <= 102) then
																													local v377 = 0;
																													local v378;
																													local v379;
																													local v380;
																													local v381;
																													local v382;
																													while true do
																														if (v377 == 0) then
																															v378 = 0;
																															v379 = nil;
																															v377 = 1;
																														end
																														if (v377 == 2) then
																															v382 = nil;
																															while true do
																																if (v378 == 1) then
																																	local v611 = 0;
																																	while true do
																																		if (v611 == 0) then
																																			v149 = (v381 + v379) - 1;
																																			v382 = 0;
																																			v611 = 1;
																																		end
																																		if (v611 == 1) then
																																			v378 = 2;
																																			break;
																																		end
																																	end
																																end
																																if (v378 == 0) then
																																	local v612 = 0;
																																	while true do
																																		if (v612 == 1) then
																																			v378 = 1;
																																			break;
																																		end
																																		if (v612 == 0) then
																																			v379 = v156[2];
																																			v380, v381 = v147(v154[v379](v21(v154, v379 + 1, v156[3])));
																																			v612 = 1;
																																		end
																																	end
																																end
																																if (v378 == 2) then
																																	for v665 = v379, v149 do
																																		local v666 = 0;
																																		local v667;
																																		while true do
																																			if (v666 == 0) then
																																				v667 = 0;
																																				while true do
																																					if (v667 == 0) then
																																						v382 = v382 + 1;
																																						v154[v665] = v380[v382];
																																						break;
																																					end
																																				end
																																				break;
																																			end
																																		end
																																	end
																																	break;
																																end
																															end
																															break;
																														end
																														if (v377 == 1) then
																															v380 = nil;
																															v381 = nil;
																															v377 = 2;
																														end
																													end
																												elseif (v157 == 103) then
																													v154[v156[2]] = v67[v156[3]];
																												else
																													v154[v156[2]] = v154[v156[3]] + v154[v156[4]];
																												end
																											elseif (v157 <= 122) then
																												if (v157 <= 113) then
																													if (v157 <= 108) then
																														if (v157 <= 106) then
																															if (v157 == 105) then
																																local v383 = 0;
																																local v384;
																																local v385;
																																while true do
																																	if (0 == v383) then
																																		v384 = 0;
																																		v385 = nil;
																																		v383 = 1;
																																	end
																																	if (v383 == 1) then
																																		while true do
																																			if (v384 == 0) then
																																				v385 = v156[2];
																																				do
																																					return v154[v385](v21(v154, v385 + 1, v156[3]));
																																				end
																																				break;
																																			end
																																		end
																																		break;
																																	end
																																end
																															else
																																v154[v156[2]] = v156[3] + v154[v156[4]];
																															end
																														elseif (v157 > 107) then
																															if (v154[v156[2]] == v154[v156[4]]) then
																																v148 = v148 + 1;
																															else
																																v148 = v156[3];
																															end
																														else
																															v154[v156[2]] = v154[v156[3]] + v156[4];
																														end
																													elseif (v157 <= 110) then
																														if (v157 > 109) then
																															v67[v156[3]] = v154[v156[2]];
																														else
																															v154[v156[2]] = v154[v156[1 + 2]] * v154[v156[4]];
																														end
																													elseif (v157 <= 111) then
																														v154[v156[1 + 1]] = v156[3];
																													elseif (v157 > 112) then
																														if (v156[2] == v154[v156[4]]) then
																															v148 = v148 + 1;
																														else
																															v148 = v156[3];
																														end
																													else
																														v154[v156[2]] = v156[3] ^ v154[v156[4]];
																													end
																												elseif (v157 <= 117) then
																													if (v157 <= (1000 - (261 + 624))) then
																														if (v157 > 114) then
																															v154[v156[2]] = v154[v156[3]] / v156[6 - 2];
																														else
																															for v434 = v156[2], v156[3] do
																																v154[v434] = nil;
																															end
																														end
																													elseif (v157 > 116) then
																														v154[v156[2]][v156[3]] = v156[4];
																													else
																														local v396 = 0;
																														local v397;
																														local v398;
																														while true do
																															if (v396 == 1) then
																																while true do
																																	if (v397 == 0) then
																																		v398 = v156[2];
																																		do
																																			return v154[v398](v21(v154, v398 + 1, v149));
																																		end
																																		break;
																																	end
																																end
																																break;
																															end
																															if (v396 == 0) then
																																v397 = 0;
																																v398 = nil;
																																v396 = 1;
																															end
																														end
																													end
																												elseif (v157 <= 119) then
																													if (v157 == 118) then
																														if (v154[v156[2]] ~= v156[4]) then
																															v148 = v148 + 1;
																														else
																															v148 = v156[3];
																														end
																													else
																														local v399 = 0;
																														local v400;
																														local v401;
																														while true do
																															if (v399 == 1) then
																																while true do
																																	if (v400 == 0) then
																																		v401 = v156[2];
																																		do
																																			return v154[v401](v21(v154, v401 + (1081 - (1020 + 60)), v149));
																																		end
																																		break;
																																	end
																																end
																																break;
																															end
																															if (0 == v399) then
																																v400 = 0;
																																v401 = nil;
																																v399 = 1;
																															end
																														end
																													end
																												elseif (v157 <= 120) then
																													v154[v156[2]] = v154[v156[3]][v156[4]];
																												elseif (v157 == 121) then
																													local v485 = 0;
																													local v486;
																													local v487;
																													local v488;
																													while true do
																														if (0 == v485) then
																															v486 = v156[2];
																															v487 = v154[v486];
																															v485 = 1;
																														end
																														if (v485 == 1) then
																															v488 = v156[3];
																															for v616 = 1, v488 do
																																v487[v616] = v154[v486 + v616];
																															end
																															break;
																														end
																													end
																												else
																													local v489 = 0;
																													local v490;
																													local v491;
																													local v492;
																													local v493;
																													while true do
																														if (v489 == 2) then
																															while true do
																																if (v490 == 1) then
																																	v493 = 0;
																																	for v704 = v491, v156[13 - 9] do
																																		local v705 = 0;
																																		local v706;
																																		while true do
																																			if (v705 == 0) then
																																				v706 = 0;
																																				while true do
																																					if (v706 == 0) then
																																						v493 = v493 + 1;
																																						v154[v704] = v492[v493];
																																						break;
																																					end
																																				end
																																				break;
																																			end
																																		end
																																	end
																																	break;
																																end
																																if (v490 == 0) then
																																	local v677 = 0;
																																	while true do
																																		if (v677 == 0) then
																																			v491 = v156[1425 - (630 + 793)];
																																			v492 = {v154[v491](v154[v491 + 1])};
																																			v677 = 1;
																																		end
																																		if (v677 == 1) then
																																			v490 = 1;
																																			break;
																																		end
																																	end
																																end
																															end
																															break;
																														end
																														if (1 == v489) then
																															v492 = nil;
																															v493 = nil;
																															v489 = 2;
																														end
																														if (v489 == 0) then
																															v490 = 0;
																															v491 = nil;
																															v489 = 1;
																														end
																													end
																												end
																											elseif (v157 <= 131) then
																												if (v157 <= 126) then
																													if (v157 <= (587 - 463)) then
																														if (v157 > (49 + 74)) then
																															v154[v156[2]]();
																														else
																															local v404 = 0;
																															local v405;
																															local v406;
																															local v407;
																															while true do
																																if (v404 == 1) then
																																	v407 = {};
																																	v406 = v18({}, {[v7("\204\208\81\216\33\83\235", "\54\147\143\56\182\69")]=function(v539, v540)
																																		local v541 = 0;
																																		local v542;
																																		local v543;
																																		while true do
																																			if (v541 == 1) then
																																				while true do
																																					if (v542 == 0) then
																																						local v739 = 0;
																																						while true do
																																							if (v739 == 0) then
																																								v543 = v407[v540];
																																								return v543[1][v543[2]];
																																							end
																																						end
																																					end
																																				end
																																				break;
																																			end
																																			if (v541 == 0) then
																																				v542 = 0;
																																				v543 = nil;
																																				v541 = 1;
																																			end
																																		end
																																	end,[v7("\233\190\241\76\200\223\143\251\76\199", "\191\182\225\159\41")]=function(v544, v545, v546)
																																		local v547 = 0;
																																		local v548;
																																		local v549;
																																		while true do
																																			if (v547 == 0) then
																																				v548 = 0;
																																				v549 = nil;
																																				v547 = 1;
																																			end
																																			if (v547 == 1) then
																																				while true do
																																					if (v548 == 0) then
																																						v549 = v407[v545];
																																						v549[1][v549[2]] = v546;
																																						break;
																																					end
																																				end
																																				break;
																																			end
																																		end
																																	end});
																																	v404 = 2;
																																end
																																if (v404 == 2) then
																																	for v550 = 1, v156[4] do
																																		local v551 = 0;
																																		local v552;
																																		local v553;
																																		while true do
																																			if (v551 == 0) then
																																				v552 = 0;
																																				v553 = nil;
																																				v551 = 1;
																																			end
																																			if (v551 == 1) then
																																				while true do
																																					if (v552 == 1) then
																																						if (v553[1] == 3) then
																																							v407[v550 - 1] = {v154,v553[3]};
																																						else
																																							v407[v550 - (1748 - (760 + 987))] = {v67,v553[3]};
																																						end
																																						v153[#v153 + 1] = v407;
																																						break;
																																					end
																																					if (v552 == 0) then
																																						local v743 = 0;
																																						while true do
																																							if (v743 == 1) then
																																								v552 = 1;
																																								break;
																																							end
																																							if (v743 == 0) then
																																								v148 = v148 + 1;
																																								v553 = v144[v148];
																																								v743 = 1;
																																							end
																																						end
																																					end
																																				end
																																				break;
																																			end
																																		end
																																	end
																																	v154[v156[2]] = v43(v405, v406, v68);
																																	break;
																																end
																																if (v404 == 0) then
																																	v405 = v145[v156[9 - 6]];
																																	v406 = nil;
																																	v404 = 1;
																																end
																															end
																														end
																													elseif (v157 == 125) then
																														v154[v156[2]] = v156[3] ~= 0;
																													else
																														v154[v156[2]] = v156[1916 - (1789 + 124)] - v154[v156[770 - (745 + 21)]];
																													end
																												elseif (v157 <= 128) then
																													if (v157 > 127) then
																														local v410 = 0;
																														local v411;
																														local v412;
																														local v413;
																														local v414;
																														while true do
																															if (v410 == 0) then
																																v411 = 0;
																																v412 = nil;
																																v410 = 1;
																															end
																															if (v410 == 1) then
																																v413 = nil;
																																v414 = nil;
																																v410 = 2;
																															end
																															if (v410 == 2) then
																																while true do
																																	if (v411 == 0) then
																																		local v619 = 0;
																																		while true do
																																			if (v619 == 1) then
																																				v411 = 1;
																																				break;
																																			end
																																			if (v619 == 0) then
																																				v412 = v156[2];
																																				v413 = v154[v412];
																																				v619 = 1;
																																			end
																																		end
																																	end
																																	if (v411 == 1) then
																																		v414 = v154[v412 + 2];
																																		if (v414 > 0) then
																																			if (v413 > v154[v412 + 1]) then
																																				v148 = v156[3];
																																			else
																																				v154[v412 + 3] = v413;
																																			end
																																		elseif (v413 < v154[v412 + 1]) then
																																			v148 = v156[3];
																																		else
																																			v154[v412 + 3] = v413;
																																		end
																																		break;
																																	end
																																end
																																break;
																															end
																														end
																													else
																														v154[v156[2]] = v154[v156[3]][v154[v156[4]]];
																													end
																												elseif (v157 <= 129) then
																													if (v156[2] < v154[v156[4]]) then
																														v148 = v148 + 1;
																													else
																														v148 = v156[3];
																													end
																												elseif (v157 == 130) then
																													v154[v156[2]][v154[v156[3]]] = v154[v156[4]];
																												else
																													v154[v156[1 + 1]] = v154[v156[3]] / v154[v156[4]];
																												end
																											elseif (v157 <= (371 - 236)) then
																												if (v157 <= 133) then
																													if (v157 > 132) then
																														local v417 = 0;
																														local v418;
																														local v419;
																														local v420;
																														while true do
																															if (v417 == 0) then
																																v418 = 0;
																																v419 = nil;
																																v417 = 1;
																															end
																															if (1 == v417) then
																																v420 = nil;
																																while true do
																																	if (v418 == 0) then
																																		local v621 = 0;
																																		while true do
																																			if (v621 == 1) then
																																				v418 = 1;
																																				break;
																																			end
																																			if (v621 == 0) then
																																				v419 = v156[2];
																																				v420 = v154[v156[3]];
																																				v621 = 1;
																																			end
																																		end
																																	end
																																	if (v418 == 1) then
																																		v154[v419 + (3 - 2)] = v420;
																																		v154[v419] = v420[v156[4]];
																																		break;
																																	end
																																end
																																break;
																															end
																														end
																													else
																														v154[v156[2]] = v156[1 + 2] ~= 0;
																													end
																												elseif (v157 == (106 + 28)) then
																													v154[v156[2]] = v154[v156[3]][v154[v156[4]]];
																												else
																													v154[v156[2]][v156[3]] = v154[v156[4]];
																												end
																											elseif (v157 <= (1192 - (87 + 968))) then
																												if (v157 == (598 - 462)) then
																													v154[v156[2]] = v154[v156[3]] - v156[4 + 0];
																												else
																													local v427 = 0;
																													local v428;
																													local v429;
																													local v430;
																													local v431;
																													local v432;
																													while true do
																														if (v427 == 2) then
																															v432 = nil;
																															while true do
																																if (v428 == 2) then
																																	for v668 = v429, v149 do
																																		local v669 = 0;
																																		local v670;
																																		while true do
																																			if (v669 == 0) then
																																				v670 = 0;
																																				while true do
																																					if (0 == v670) then
																																						v432 = v432 + 1;
																																						v154[v668] = v430[v432];
																																						break;
																																					end
																																				end
																																				break;
																																			end
																																		end
																																	end
																																	break;
																																end
																																if (v428 == 0) then
																																	local v625 = 0;
																																	while true do
																																		if (v625 == 0) then
																																			v429 = v156[2];
																																			v430, v431 = v147(v154[v429](v154[v429 + 1]));
																																			v625 = 1;
																																		end
																																		if (v625 == 1) then
																																			v428 = 1;
																																			break;
																																		end
																																	end
																																end
																																if (1 == v428) then
																																	local v626 = 0;
																																	while true do
																																		if (v626 == 0) then
																																			v149 = (v431 + v429) - 1;
																																			v432 = 0;
																																			v626 = 1;
																																		end
																																		if (v626 == 1) then
																																			v428 = 2;
																																			break;
																																		end
																																	end
																																end
																															end
																															break;
																														end
																														if (0 == v427) then
																															v428 = 0;
																															v429 = nil;
																															v427 = 1;
																														end
																														if (v427 == 1) then
																															v430 = nil;
																															v431 = nil;
																															v427 = 2;
																														end
																													end
																												end
																											elseif (v157 <= 138) then
																												v154[v156[2]] = v43(v145[v156[3]], nil, v68);
																											elseif (v157 > 139) then
																												v154[v156[2]] = v154[v156[3]] - v154[v156[8 - 4]];
																											else
																												local v499 = 0;
																												local v500;
																												local v501;
																												local v502;
																												local v503;
																												while true do
																													if (v499 == 2) then
																														while true do
																															if (v500 == 1) then
																																v503 = v154[v501 + 2];
																																if (v503 > 0) then
																																	if (v502 > v154[v501 + (1414 - (447 + 966))]) then
																																		v148 = v156[3];
																																	else
																																		v154[v501 + 3] = v502;
																																	end
																																elseif (v502 < v154[v501 + 1]) then
																																	v148 = v156[3];
																																else
																																	v154[v501 + (8 - 5)] = v502;
																																end
																																break;
																															end
																															if (v500 == 0) then
																																local v679 = 0;
																																while true do
																																	if (v679 == 1) then
																																		v500 = 1;
																																		break;
																																	end
																																	if (v679 == 0) then
																																		v501 = v156[2];
																																		v502 = v154[v501];
																																		v679 = 1;
																																	end
																																end
																															end
																														end
																														break;
																													end
																													if (v499 == 0) then
																														v500 = 0;
																														v501 = nil;
																														v499 = 1;
																													end
																													if (v499 == 1) then
																														v502 = nil;
																														v503 = nil;
																														v499 = 2;
																													end
																												end
																											end
																											v148 = v148 + 1;
																											break;
																										end
																									end
																									break;
																								end
																							end
																						end
																						break;
																					end
																					if (v143 == 2) then
																						v152 = v20("#", ...) - (1 + 0);
																						v153 = {};
																						v154 = {};
																						for v174 = 0, v152 do
																							if (v174 >= v146) then
																								v150[v174 - v146] = v151[v174 + 1];
																							else
																								v154[v174] = v151[v174 + (1 - 0)];
																							end
																						end
																						v143 = 3;
																					end
																					if (v143 == 0) then
																						v144 = v71;
																						v145 = v72;
																						v146 = v73;
																						v147 = v41;
																						v143 = 1;
																					end
																					if (v143 == 1) then
																						v148 = 1;
																						v149 = -1;
																						v150 = {};
																						v151 = {...};
																						v143 = 2;
																					end
																				end
																			end;
																		end
																	end
																end
																if (0 == v70) then
																	local v127 = 0;
																	while true do
																		if (v127 == 1) then
																			v70 = 1;
																			break;
																		end
																		if (v127 == 0) then
																			v71 = v66[1];
																			v72 = v66[1639 - (1523 + 114)];
																			v127 = 1;
																		end
																	end
																end
																break;
															end
														end
													end
													break;
												end
											end
										end
										v48 = 1;
									end
									if (1 == v48) then
										return v43(v42(), {}, v29)(...);
									end
								end
							end
							if (v31 == 2) then
								local v49 = 0;
								while true do
									if (v49 == 0) then
										function v36()
											local v74 = 0;
											local v75;
											local v76;
											local v77;
											while true do
												if (v74 == 0) then
													v75 = 0;
													v76 = nil;
													v74 = 1;
												end
												if (v74 == 1) then
													v77 = nil;
													while true do
														local v112 = 0;
														while true do
															if (v112 == 0) then
																if (v75 == 1) then
																	return (v77 * 256) + v76;
																end
																if (v75 == 0) then
																	local v128 = 0;
																	while true do
																		if (v128 == 1) then
																			v75 = 1;
																			break;
																		end
																		if (v128 == 0) then
																			v76, v77 = v9(v28, v32, v32 + 2);
																			v32 = v32 + 2;
																			v128 = 1;
																		end
																	end
																end
																break;
															end
														end
													end
													break;
												end
											end
										end
										v37 = nil;
										v49 = 1;
									end
									if (v49 == 1) then
										function v37()
											local v78 = 0;
											local v79;
											local v80;
											local v81;
											local v82;
											local v83;
											while true do
												if (v78 == 0) then
													v79 = 0;
													v80 = nil;
													v78 = 1;
												end
												if (v78 == 2) then
													v83 = nil;
													while true do
														local v113 = 0;
														while true do
															if (v113 == 0) then
																if (v79 == 0) then
																	local v129 = 0;
																	while true do
																		if (v129 == 0) then
																			v80, v81, v82, v83 = v9(v28, v32, v32 + 3);
																			v32 = v32 + (11 - 7);
																			v129 = 1;
																		end
																		if (1 == v129) then
																			v79 = 1;
																			break;
																		end
																	end
																end
																if (v79 == 1) then
																	return (v83 * 16777216) + (v82 * 65536) + (v81 * (493 - 237)) + v80;
																end
																break;
															end
														end
													end
													break;
												end
												if (v78 == 1) then
													v81 = nil;
													v82 = nil;
													v78 = 2;
												end
											end
										end
										v38 = nil;
										v49 = 2;
									end
									if (v49 == 2) then
										v31 = 3;
										break;
									end
								end
							end
							break;
						end
						if (v45 == 0) then
							if (v31 == 4) then
								local v50 = 0;
								while true do
									if (v50 == 2) then
										v31 = 5;
										break;
									end
									if (v50 == 0) then
										v41 = nil;
										function v41(...)
											return {...}, v20("#", ...);
										end
										v50 = 1;
									end
									if (v50 == 1) then
										v42 = nil;
										function v42()
											local v84 = 0;
											local v85;
											local v86;
											local v87;
											local v88;
											local v89;
											local v90;
											local v91;
											while true do
												if (v84 == 1) then
													v87 = nil;
													v88 = nil;
													v84 = 2;
												end
												if (v84 == 2) then
													v89 = nil;
													v90 = nil;
													v84 = 3;
												end
												if (v84 == 3) then
													v91 = nil;
													while true do
														local v114 = 0;
														while true do
															if (v114 == 0) then
																if (v85 == 0) then
																	local v130 = 0;
																	while true do
																		if (v130 == 0) then
																			v86 = {};
																			v87 = {};
																			v130 = 1;
																		end
																		if (v130 == 1) then
																			v88 = {};
																			v89 = {v86,v87,nil,v88};
																			v130 = 2;
																		end
																		if (v130 == 2) then
																			v85 = 1;
																			break;
																		end
																	end
																end
																if (v85 == 2) then
																	local v131 = 0;
																	while true do
																		if (v131 == 1) then
																			return v89;
																		end
																		if (v131 == 0) then
																			for v158 = 569 - (367 + 201), v37() do
																				local v159 = 0;
																				local v160;
																				while true do
																					if (v159 == 0) then
																						v160 = v35();
																						if (v34(v160, 1, 1) == 0) then
																							local v175 = 0;
																							local v176;
																							local v177;
																							local v178;
																							while true do
																								if (v175 == 0) then
																									v176 = v34(v160, 2, 3);
																									v177 = v34(v160, 4, 6);
																									v175 = 1;
																								end
																								if (v175 == 3) then
																									if (v34(v177, 3, 3) == 1) then
																										v178[4] = v91[v178[4]];
																									end
																									v86[v158] = v178;
																									break;
																								end
																								if (2 == v175) then
																									if (v34(v177, 1, 1) == 1) then
																										v178[1 + 1] = v91[v178[2]];
																									end
																									if (v34(v177, 2, 2) == 1) then
																										v178[880 - (282 + 595)] = v91[v178[3]];
																									end
																									v175 = 3;
																								end
																								if (v175 == 1) then
																									v178 = {v36(),v36(),nil,nil};
																									if (v176 == 0) then
																										local v192 = 0;
																										local v193;
																										while true do
																											if (v192 == 0) then
																												v193 = 0;
																												while true do
																													if (v193 == 0) then
																														v178[3] = v36();
																														v178[931 - (214 + 713)] = v36();
																														break;
																													end
																												end
																												break;
																											end
																										end
																									elseif (v176 == 1) then
																										v178[3] = v37();
																									elseif (v176 == (1 + 1)) then
																										v178[3] = v37() - (2 ^ 16);
																									elseif (v176 == 3) then
																										local v200 = 0;
																										local v201;
																										while true do
																											if (v200 == 0) then
																												v201 = 0;
																												while true do
																													if (v201 == 0) then
																														v178[3] = v37() - (2 ^ 16);
																														v178[4] = v36();
																														break;
																													end
																												end
																												break;
																											end
																										end
																									end
																									v175 = 2;
																								end
																							end
																						end
																						break;
																					end
																				end
																			end
																			for v161 = 1, v37() do
																				v87[v161 - 1] = v42();
																			end
																			v131 = 1;
																		end
																	end
																end
																v114 = 1;
															end
															if (v114 == 1) then
																if (v85 == 1) then
																	local v132 = 0;
																	while true do
																		if (1 == v132) then
																			for v163 = 1, v90 do
																				local v164 = 0;
																				local v165;
																				local v166;
																				while true do
																					if (v164 == 0) then
																						v165 = v35();
																						v166 = nil;
																						v164 = 1;
																					end
																					if (v164 == 1) then
																						if (v165 == 1) then
																							v166 = v35() ~= (931 - (857 + 74));
																						elseif (v165 == 2) then
																							v166 = v38();
																						elseif (v165 == 3) then
																							v166 = v39();
																						end
																						v91[v163] = v166;
																						break;
																					end
																				end
																			end
																			v89[3] = v35();
																			v132 = 2;
																		end
																		if (0 == v132) then
																			v90 = v37();
																			v91 = {};
																			v132 = 1;
																		end
																		if (v132 == 2) then
																			v85 = 2;
																			break;
																		end
																	end
																end
																break;
															end
														end
													end
													break;
												end
												if (v84 == 0) then
													v85 = 0;
													v86 = nil;
													v84 = 1;
												end
											end
										end
										v50 = 2;
									end
								end
							end
							if (1 == v31) then
								local v51 = 0;
								while true do
									if (v51 == 0) then
										function v34(v92, v93, v94)
											if v94 then
												local v103 = 0;
												local v104;
												local v105;
												while true do
													if (v103 == 1) then
														while true do
															if (v104 == 0) then
																local v117 = 0;
																while true do
																	if (v117 == 0) then
																		v105 = (v92 / (2 ^ (v93 - 1))) % (2 ^ (((v94 - 1) - (v93 - 1)) + (2 - 1)));
																		return v105 - (v105 % 1);
																	end
																end
															end
														end
														break;
													end
													if (0 == v103) then
														v104 = 0;
														v105 = nil;
														v103 = 1;
													end
												end
											else
												local v106 = 0;
												local v107;
												local v108;
												while true do
													if (0 == v106) then
														v107 = 0;
														v108 = nil;
														v106 = 1;
													end
													if (v106 == 1) then
														while true do
															if (v107 == 0) then
																local v118 = 0;
																while true do
																	if (0 == v118) then
																		v108 = 2 ^ (v93 - 1);
																		return (((v92 % (v108 + v108)) >= v108) and 1) or 0;
																	end
																end
															end
														end
														break;
													end
												end
											end
										end
										v35 = nil;
										v51 = 1;
									end
									if (v51 == 1) then
										function v35()
											local v95 = 0;
											local v96;
											local v97;
											while true do
												if (v95 == 0) then
													v96 = 0;
													v97 = nil;
													v95 = 1;
												end
												if (v95 == 1) then
													while true do
														local v115 = 0;
														while true do
															if (v115 == 0) then
																if (v96 == 0) then
																	local v133 = 0;
																	while true do
																		if (v133 == 0) then
																			v97 = v9(v28, v32, v32);
																			v32 = v32 + 1;
																			v133 = 1;
																		end
																		if (v133 == 1) then
																			v96 = 1;
																			break;
																		end
																	end
																end
																if (1 == v96) then
																	return v97;
																end
																break;
															end
														end
													end
													break;
												end
											end
										end
										v36 = nil;
										v51 = 2;
									end
									if (v51 == 2) then
										v31 = 2;
										break;
									end
								end
							end
							v45 = 1;
						end
					end
				end
				break;
			end
		end
	end
	vv17(), ...);
end
